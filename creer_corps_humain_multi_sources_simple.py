#!/usr/bin/env python3
"""
Script principal pour cr√©er un document corps humain avec images multi-sources
Version simplifi√©e utilisant les t√©l√©chargeurs existants
"""

from telecharger_images_multi_sources_simple import MultiSourceImageDownloaderSimple
from convertir_images import convertir_images_pour_docx
import json
import os
import subprocess
import time

def main():
    """T√©l√©charge les images multi-sources et cr√©e la configuration"""

    start_time = time.time()

    # Configuration du th√®me
    theme_dir = "themes/corps_humain"
    photos_dir = os.path.join(theme_dir, "photos")

    # Cr√©er le dossier si n√©cessaire
    os.makedirs(photos_dir, exist_ok=True)

    # Liste des parties du corps avec mots-cl√©s optimis√©s
    # Format: (mot_anglais, nom_fran√ßais, nom_mac√©donien)
    parties_corps = [
        ("head", "tete", "–≥–ª–∞–≤–∞"),
        ("eye", "oeil", "–æ–∫–æ"),
        ("nose", "nez", "–Ω–æ—Å"),
        ("mouth", "bouche", "—É—Å—Ç–∞"),
        ("hand", "main", "—Ä–∞–∫–∞"),
        ("leg", "jambe", "–Ω–æ–≥–∞"),
        ("heart", "coeur", "—Å—Ä—Ü–µ"),
        ("stomach", "estomac", "—Å—Ç–æ–º–∞–∫"),
        ("ear", "oreille", "—É–≤–æ"),
        ("hair", "cheveux", "–∫–æ—Å–∞"),
    ]

    print("=" * 80)
    print("üöÄ T√âL√âCHARGEMENT MULTI-SOURCES SIMPLIFI√â - CORPS HUMAIN")
    print("=" * 80)
    print(f"üìä {len(parties_corps)} parties du corps √† traiter")
    print(f"üì∏ 10 images par partie = {len(parties_corps) * 10} images au total")
    print(f"‚ö° Parall√©lisme: {min(10, len(parties_corps))} t√©l√©chargements simultan√©s")
    print("=" * 80)

    # T√©l√©charger les images en parall√®le
    downloader = MultiSourceImageDownloaderSimple(max_workers=10)
    results = downloader.download_multiple_words_parallel(parties_corps, photos_dir)

    # Convertir les images en JPEG baseline compatible python-docx
    print("\n" + "=" * 80)
    print("üîÑ CONVERSION DES IMAGES")
    print("=" * 80)

    conversions = convertir_images_pour_docx(photos_dir)

    # Cr√©er la configuration finale
    elements = []
    for word, french, macedonian in parties_corps:
        image_file = results.get(french)

        if image_file:
            # Mettre √† jour le nom si converti
            if image_file in conversions:
                image_file = conversions[image_file]

            elements.append({
                "nom_macedonien": macedonian,
                "nom_francais": french,
                "image_selectionnee": image_file
            })
        else:
            print(f"‚ö†Ô∏è  {french}: Aucune image trouv√©e")

    # Sauvegarder la configuration
    print("\n" + "=" * 80)
    print("üìù CR√âATION DU FICHIER DE CONFIGURATION")
    print("=" * 80)

    config = {
        "theme": "corps_humain",
        "titre": "–î–µ–ª–æ–≤–∏ –Ω–∞ —Ç–µ–ª–æ—Ç–æ",
        "colonnes": 3,
        "elements": elements
    }

    config_path = os.path.join(theme_dir, "selection.json")
    with open(config_path, 'w', encoding='utf-8') as f:
        json.dump(config, f, ensure_ascii=False, indent=2)

    print(f"‚úÖ Configuration sauvegard√©e: {config_path}")
    print(f"üìä {len(elements)} √©l√©ments configur√©s")

    # G√©n√©rer le document
    print("\n" + "=" * 80)
    print("üìÑ G√âN√âRATION DU DOCUMENT WORD")
    print("=" * 80)

    result = subprocess.run(
        ['python', 'generer_document_theme.py', 'corps_humain'],
        capture_output=True,
        text=True
    )

    if result.stdout:
        print(result.stdout)
    if result.stderr:
        print(result.stderr)

    end_time = time.time()
    total_time = end_time - start_time

    if result.returncode == 0:
        print("\n" + "=" * 80)
        print("‚úÖ TERMIN√â AVEC SUCC√àS !")
        print("=" * 80)
        print(f"\n‚è±Ô∏è  Temps total: {total_time:.1f} secondes")
        print(f"üìÅ Dossier: {theme_dir}/")
        print(f"üì∏ Images: {photos_dir}/")
        print(f"üìÑ Document: {theme_dir}/Corps Humain.docx")

        # Statistiques
        total_images = len([f for f in os.listdir(photos_dir) if f.endswith(('.jpg', '.png'))])
        print(f"üìä {total_images} images t√©l√©charg√©es au total")
        print(f"üéØ {len(elements)} images s√©lectionn√©es pour le document")
        print(f"üìÇ {total_images - len(elements)} images alternatives disponibles")

        print(f"\nüöÄ Performance: {len(parties_corps)/total_time:.1f} mots/seconde")
        print(f"üìà Vitesse: {total_images/total_time:.1f} images/seconde")

        print(f"\nüí° Tu peux maintenant:")
        print(f"   - Ouvrir le document Word g√©n√©r√©")
        print(f"   - Comparer les images alternatives dans {photos_dir}/")
        print(f"   - Modifier selection.json pour changer les images")
        print(f"   - R√©g√©n√©rer le document avec python generer_document_theme.py corps_humain")

    else:
        print(f"\n‚ùå Erreur lors de la g√©n√©ration du document (code {result.returncode})")
        print(f"‚è±Ô∏è  Temps √©coul√©: {total_time:.1f} secondes")


if __name__ == "__main__":
    main()
