#!/usr/bin/env python3
"""
Script pour cr√©er un document sur le corps humain
avec images t√©l√©charg√©es depuis Wikimedia Commons
"""

from telecharger_images_wikimedia import WikimediaDownloader
import json
import os

def main():
    """T√©l√©charge les images et cr√©e la configuration"""

    # Configuration du th√®me
    theme_dir = "themes/corps_humain"
    photos_dir = os.path.join(theme_dir, "photos")

    # Cr√©er le dossier si n√©cessaire
    os.makedirs(photos_dir, exist_ok=True)

    # Liste des parties du corps √† t√©l√©charger
    parties_corps = [
        {
            "nom_macedonien": "–≥–ª–∞–≤–∞",
            "nom_francais": "t√™te",
            "requete_wikimedia": "head",
            "prefix": "tete"
        },
        {
            "nom_macedonien": "–æ–∫–æ",
            "nom_francais": "≈ìil",
            "requete_wikimedia": "eye",
            "prefix": "oeil"
        },
        {
            "nom_macedonien": "–Ω–æ—Å",
            "nom_francais": "nez",
            "requete_wikimedia": "nose",
            "prefix": "nez"
        },
        {
            "nom_macedonien": "—É—Å—Ç–∞",
            "nom_francais": "bouche",
            "requete_wikimedia": "mouth",
            "prefix": "bouche"
        },
        {
            "nom_macedonien": "—Ä–∞–∫–∞",
            "nom_francais": "main",
            "requete_wikimedia": "hand",
            "prefix": "main"
        },
        {
            "nom_macedonien": "–Ω–æ–≥–∞",
            "nom_francais": "jambe",
            "requete_wikimedia": "leg",
            "prefix": "jambe"
        },
        {
            "nom_macedonien": "—Å—Ä—Ü–µ",
            "nom_francais": "c≈ìur",
            "requete_wikimedia": "heart",
            "prefix": "coeur"
        },
        {
            "nom_macedonien": "—Å—Ç–æ–º–∞–∫",
            "nom_francais": "estomac",
            "requete_wikimedia": "stomach",
            "prefix": "estomac"
        },
        {
            "nom_macedonien": "—É–≤–æ",
            "nom_francais": "oreille",
            "requete_wikimedia": "ear",
            "prefix": "oreille"
        },
        {
            "nom_macedonien": "–∫–æ—Å–∞",
            "nom_francais": "cheveux",
            "requete_wikimedia": "hair",
            "prefix": "cheveux"
        }
    ]

    # T√©l√©charger les images
    downloader = WikimediaDownloader()

    print("=" * 80)
    print("üìö T√âL√âCHARGEMENT DES IMAGES DEPUIS WIKIMEDIA COMMONS")
    print("=" * 80)

    for partie in parties_corps:
        print(f"\n{'='*80}")
        print(f"üîç {partie['nom_francais'].upper()} ({partie['nom_macedonien']})")
        print(f"{'='*80}")

        downloader.search_and_download(
            query=partie['requete_wikimedia'],
            output_dir=photos_dir,
            count=3,
            filename_prefix=partie['prefix']
        )

    # Cr√©er le fichier selection.json
    print("\n" + "=" * 80)
    print("üìù CR√âATION DU FICHIER DE CONFIGURATION")
    print("=" * 80)

    # Lister les images t√©l√©charg√©es et s√©lectionner la premi√®re de chaque s√©rie
    elements = []
    for partie in parties_corps:
        # Chercher la premi√®re image de cette partie
        image_selectionnee = None
        for ext in ['jpg', 'jpeg', 'png']:
            possible_file = f"{partie['prefix']}_1.{ext}"
            if os.path.exists(os.path.join(photos_dir, possible_file)):
                image_selectionnee = possible_file
                break

        if image_selectionnee:
            elements.append({
                "nom_macedonien": partie["nom_macedonien"],
                "nom_francais": partie["nom_francais"],
                "image_selectionnee": image_selectionnee
            })
            print(f"‚úÖ {partie['nom_francais']}: {image_selectionnee}")
        else:
            print(f"‚ö†Ô∏è  {partie['nom_francais']}: Aucune image trouv√©e")

    # Cr√©er le fichier de configuration
    config = {
        "theme": "corps_humain",
        "titre": "–î–µ–ª–æ–≤–∏ –Ω–∞ —Ç–µ–ª–æ—Ç–æ - –ú–∞–∫–µ–¥–æ–Ω—Å–∫–∏",
        "colonnes": 3,
        "elements": elements
    }

    config_path = os.path.join(theme_dir, "selection.json")
    with open(config_path, 'w', encoding='utf-8') as f:
        json.dump(config, f, ensure_ascii=False, indent=2)

    print(f"\n‚úÖ Configuration sauvegard√©e: {config_path}")

    # G√©n√©rer le document
    print("\n" + "=" * 80)
    print("üìÑ G√âN√âRATION DU DOCUMENT WORD")
    print("=" * 80)

    import subprocess
    result = subprocess.run(
        ['python', 'generer_document_theme.py', 'corps_humain'],
        capture_output=True,
        text=True
    )

    print(result.stdout)
    if result.stderr:
        print(result.stderr)

    if result.returncode == 0:
        print("\n" + "=" * 80)
        print("‚úÖ TERMIN√â !")
        print("=" * 80)
        print(f"\nüìÅ Dossier: {theme_dir}/")
        print(f"üì∏ Images: {photos_dir}/")
        print(f"üìÑ Document: {theme_dir}/Corps Humain.docx")
        print("\nüí° Tu peux maintenant uploader le .docx sur Google Drive")
    else:
        print(f"\n‚ùå Erreur lors de la g√©n√©ration du document (code {result.returncode})")


if __name__ == "__main__":
    main()

